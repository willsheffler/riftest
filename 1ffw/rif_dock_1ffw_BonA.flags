#####################################################################################
# input files you will need to change (unless you ran the rif_hier example as-is)
#####################################################################################

-rif_dock:target_pdb    rif_1ffw_A/1ffw_A.rif.gz_target.pdb
-rif_dock:target_res    test_input/1ffw/1ffw_A_res.txt

-rif_dock:target_bounding_xmaps rif_1ffw_A/1ffw_A.rif.gz_BOUNDING_HACK_RIF_16.xmap.gz
-rif_dock:target_bounding_xmaps rif_1ffw_A/1ffw_A.rif.gz_BOUNDING_HACK_RIF_08.xmap.gz
-rif_dock:target_bounding_xmaps rif_1ffw_A/1ffw_A.rif.gz_BOUNDING_HACK_RIF_04.xmap.gz
-rif_dock:target_bounding_xmaps rif_1ffw_A/1ffw_A.rif.gz_BOUNDING_HACK_RIF_02.xmap.gz
-rif_dock:target_bounding_xmaps rif_1ffw_A/1ffw_A.rif.gz_BOUNDING_HACK_RIF_01.xmap.gz
-rif_dock:target_rif            rif_1ffw_A/1ffw_A.rif

# scaffolds are input here IF you use -scaffold_res, you must have files for all scaffolds. if you *dont* have
# explicit residue lists for each scaffold, it'll select crudely based on sasa and optionally secondary structure
# the automatic residue selection needs work.
-rif_dock:scaffolds     rif_1ffw_A/1ffw_A.rif.gz__ALIGNED__1ffw_B.pdb
#-rif_dock:scaffold_res  test_input/1ffw/1ffw_B_res.txt
-rif_dock::dont_use_scaffold_loops false

# this *must* be set based on what came out of the rif generator
-rif_dock:target_rf_cache rif_1ffw_A/__RF_1ffw_A.pdb_CEN_trhash71918862_resl0.1875_osamp2_replonlybdry
-rif_dock:target_rf_resl 0.1875
-rif_dock:target_rf_oversample 2

# directory for any extra generated data... if you generate scaffold rf grids, they will go here for later re-use
# default setup shouldn't use this, I think
-rif_dock:data_cache_dir  ./rifdock_scaffold_data
-rif_dock:cache_scaffold_data 0

# this is the most important parameter.. total runtime will be roughly linear in it's size. if you aren't getting good results
# increasing this *may* solve the problem
-rif_dock::beam_size_M 10.0
-rif_dock::hsearch_scale_factor 1.5

# do you want to pack the RIF rotamers? you probably do
-hack_pack true
-rif_dock::pack_iter_mult 4.0
-rif_dock::hack_pack_frac 0.20

# a redundancy filter thershold, roughly in angstroms
# NOTE: this currently does not take designed rotamers into account... two solutions could be
# quite close in space but have very different rotamers on them... you will lose such things
-rif_dock:redundancy_filter_mag 1.0
-rif_dock:n_pdb_out 20

-rif_dock:hbond_weight 1.5
-rif_dock:upweight_multi_hbond 0.0

# weight of rotamer-target interactions vs. rotamer-rotamer interactions
-rif_dock:upweight_iface 1.3


-bonus_to_native_scaffold_res          0
-add_native_scaffold_rots_when_packing 0
-restrict_to_native_scaffold_res       0

# mostly for debugging benchmark cases, you can force output of solutions that are close to the input
-rif_dock:force_output_if_close_to_input       1.5
-rif_dock:force_output_if_close_to_input_num   0

-rif_dock:outdir ./results/1ffw_test_10m_2batr1
-rif_dock:output_tag 2batr1
-rif_dock:dokfile 1ffw_resfile_test.dok



# false may not work correctly unless you carefully prepare the scaffold
-rif_dock:scaffold_to_ala true

-align_output_to_scaffold false

# this can make docking big scaffolds with small targets much faster *but* will take some calculation
# per scaffold... if you have a standard scaffold set and don't mind spending some time generating
# the scaffold rf grids
-rif_dock:use_scaffold_bounding_grids false
-rif_dock::rf_resl 0.5
-rif_dock::rf_oversample 2

# don't change this
-rif_dock:rotrf_resl   0.3
-rif_dock:rotrf_spread 0.0
-rif_dock:rotrf_scale_atr 1.0
-rif_dock:rotrf_cache_dir /work/sheffler/data/scheme_data/rot_rf_tables_03_0

-add_orbitals



# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !!!! rif is at: ./rif_1ffw_A/1ffw_A.rif.gz
# !!!! make sure you copy ./rif_1ffw_A/1ffw_A.rif.gz_target.pdb and use it in docking!!!
# !!!!      also your test structure(s) ./rif_1ffw_A/1ffw_A.rif.gz__ALIGNED__1ffw_B.pdb
# !!!! grids for docking (-rif_hier:target_rf_cache):
# !!!!     ./rif_1ffw_A/__RF_1ffw_A.pdb_CEN_trhash71918862_resl0.1875_osamp2_replonlybdry
# !!!! you will also need your input res list for docking: test_input/1ffw/1ffw_A_res.txt
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!